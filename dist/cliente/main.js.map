{"version":3,"sources":["./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/inicio-sesion/entrar-sin-registro/entrar-sin-registro.component.ts","./src/app/inicio-sesion/entrar-sin-registro/entrar-sin-registro.component.html","./src/app/inicio-sesion/registrarse/registrarse.component.ts","./src/app/inicio-sesion/registrarse/registrarse.component.html","./src/app/services/network-by-sockets-io.service.ts","./src/app/guardianes/entrar-chat.guard.ts","./src/app/services/profile.service.ts","./src/environments/environment.ts","./src/app/inicio-sesion/inicio-sesion.component.ts","./src/app/inicio-sesion/inicio-sesion.component.html","./src/app/services/handle-tokens.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/inicio-sesion/login/login.component.ts","./src/app/inicio-sesion/login/login.component.html","./src/app/services/image.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit , OnDestroy , AfterViewInit,Renderer2,  ElementRef, ViewChild} from '@angular/core';\nimport { UsuariosConectados } from '../interfaces/usuariosConectados';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup,Validators } from '@angular/forms';\n\nimport { environment } from 'src/environments/environment';\nimport { NetworkBySocketsIoService } from '../services/network-by-sockets-io.service';\nimport { ImageService } from '../services/image.service';\n\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit, OnDestroy,AfterViewInit {\n  @ViewChild('chatWindow') chatWindow?: ElementRef;\n  usuariosConectados:any\n  numeroDeUsuariosConectados:number =0\n  newMessage=''\n  arrayMessages: any[] = [];\n  sexo=\"\"\n  nombre=\"\"\n  endpointUrl = environment.url_endpoint;\n  imagenPath = '';\n  imagenUrl = '';\n  userRegister=false\n  form = new FormGroup({\n    message: new FormControl('',[Validators.required,]),\n  });\n\n  private intervalId: any;\n  constructor(//el renderer es porque necesito cerrar un div de bostrap que quedan del modal en la vista anterior\n              private renderer: Renderer2 ,\n              private netwokBySockets:NetworkBySocketsIoService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private imageService:ImageService\n    ) {\n      \n     }\n    \n    ngOnInit(): void {\n      this.updateTimeElapsed();\n      this.intervalId = setInterval(() => {\n        this.updateTimeElapsed();\n      }, 60000); // Actualizar cada minuto (60000 milisegundos)\n    \n      //cierro el modal de la vista anterior\n      this.cerrarModalBoostrapVistaAnterior()\n\n      //obtengo el sexo y nombre del usuario indicados en el inicio de sesion\n      this.route.queryParams.subscribe(params => {\n        console.log(params)\n          this.sexo = params['sexo'];\n          this.nombre = params['nombre'];   \n          this.userRegister=params['userRegister'];\n          this.imagenPath = params['urlImagen']\n          this.imagenUrl = `${this.endpointUrl}/${this.imagenPath}`;\n        });\n      //aca obtengos los usuarios conectados cuando inicia el componente chat y\n      //hago hago una comprobacion de si el nombre que vino en la ruta existe en el array de nombres \n      //esto lo hago por si el usuario actualiza la pagina, al actualziar la pagina haria que se borre en el server \n      // su nombre pero igual podria mandar mensajes desde el cliente, al comprobar esto redirecciono afuera \n      this.netwokBySockets.usuariosConectadosSubject\n            .subscribe(nombres =>{           \n                let arrayNombres= nombres.usuariosConectados\n                const nombreEncontrado = arrayNombres.find(objeto => objeto.nombre == this.nombre)\n                if (nombreEncontrado) {\n                    console.log('nombre encontrado')\n                } else{\n                    this.router.navigate(['/entrar-sin-registro']); \n                }                                    \n               this.numeroDeUsuariosConectados = arrayNombres.length               \n       })                                      \n\n       this.imageService.image$.subscribe((data) => {\n        const { nombre, imageUrl } = data;\n      \n        this.usuariosConectados.forEach((usuario: any) => {\n          if (usuario.nombre === nombre) {\n            usuario.urlImagen = imageUrl;\n          }\n        });\n    \n      });\n    this.netwokBySockets.messageSubject.subscribe((Message) =>{\n                       Message.timestamp=new Date()\n                       Message.timeElapsed= ''\n                       console.log(Message)\n                       Message.urlImagen = `${this.endpointUrl}/${Message.urlImagen}`;\n                       console.log(Message.urlImagen)\n                       this.arrayMessages.push(Message)\n                       console.log(this.usuariosConectados)\n                        // Desplazarse automáticamente al último mensaje\n                         this.scrollToBottom();\n                    })\n    \n    //obtengo los usuarios para pintar en seccion conectados de la vista chat \n    this.netwokBySockets.obtenerUsuariosConectados()\n    .subscribe((usuarios: UsuariosConectados) => {\n      this.usuariosConectados = usuarios.usuariosConectados.map((usuario) => {\n        usuario.urlImagen = `${environment.url_endpoint}/${usuario.urlImagen}` ;\n        return usuario;\n      }); \n    }); \n    \n     \n  }\n  ngOnDestroy() {\n    this.netwokBySockets.cerrarSesion()\n    clearInterval(this.intervalId);\n    window.location.reload();\n\n  }\n  ngAfterViewInit(): void {\n    this.scrollToBottom();\n  }\n  salir(){\n    this.netwokBySockets.cerrarSesion()\n  }\n  enviar(){\n    let user =  this.nombre\n    let urlImagen =''\n    let message =  this.form.get('message')?.value\n    if(this.userRegister){\n      urlImagen = localStorage.getItem('urlImagen') || ''\n    }else{\n        if(this.sexo===\"mujer\"){\n          urlImagen = `mujer.jpg` ;\n        }\n        else{\n          urlImagen = `hombre.jpg` ;\n        }\n    }\n    this.netwokBySockets.enviarMessage(user,urlImagen,message)\n    // Restablecer el campo de entrada\n    this.form.get('message')?.setValue('');\n  }\n  cerrarModalBoostrapVistaAnterior(){\n    const modalBackdrops = document.querySelectorAll('.modal-backdrop');\n    modalBackdrops.forEach(backdrop => {\n    this.renderer.setStyle(backdrop, 'display', 'none');\n    this.renderer.removeClass(document.body, 'modal-open');  \n    }); \n  }\n  // Método para desplazarse automáticamente al último mensaje\n  scrollToBottom(): void {\n    setTimeout(() => {\n      const chatWindowEl = this.chatWindow?.nativeElement;\n      const lastMessage = chatWindowEl?.lastElementChild;\n      if (lastMessage) {\n        lastMessage.scrollIntoView({ behavior: 'smooth', block: 'end' });\n      }\n    }, 0);\n  }\n  updateTimeElapsed(): void {\n    const now = new Date();\n    for (const message of this.arrayMessages) {\n      const diffInSeconds = Math.floor((now.getTime() - message.timestamp.getTime()) / 1000);\n      if (diffInSeconds < 60) {\n        message.timeElapsed = `${diffInSeconds} segundos atrás`;\n      } else if (diffInSeconds < 3600) {\n        const diffInMinutes = Math.floor(diffInSeconds / 60);\n        message.timeElapsed = `${diffInMinutes} minutos atrás`;\n      } else if (diffInSeconds < 86400) {\n        const diffInHours = Math.floor(diffInSeconds / 3600);\n        message.timeElapsed = `${diffInHours} horas atrás`;\n      } else {\n        const diffInDays = Math.floor(diffInSeconds / 86400);\n        message.timeElapsed = `${diffInDays} días atrás`;\n      }\n    }\n  }\n}\n","<!-- header menu-->\n<ul class=\"nav justify-content-end\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">hola {{nombre}}</a>\n  </li>\n  <li class=\"nav-item\">\n    <div class=\"btn-group\">\n      <button type=\"button\" class=\"btn btn-danger dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n        Action\n      </button>\n      <ul class=\"dropdown-menu\">\n        <li><button type=\"button\" class=\"dropdown-item btn btn-light\"  data-bs-toggle=\"modal\" [disabled]=\"!userRegister\" data-bs-target=\"#exampleModal\">profile</button></li>\n        <li><hr class=\"dropdown-divider\"></li>\n        <li><a class=\"dropdown-item\" (click)=\"salir()\" href=\"#\">salir </a></li>\n      </ul>\n    </div>\n  </li>\n</ul>\n\n<section style=\"background-color: #eee;\">\n    <div class=\"container py-5\"  style=\"height: 90vh;\">\n  \n      <div class=\"row\">\n        <!-- area miembros conectados-->\n        <div class=\"col-md-4 col-lg-3 col-xl-3 mb-4 mb-md-0\">\n          <h5 class=\"font-weight-bold mb-3 text-center text-lg-start\">conectados</h5>{{numeroDeUsuariosConectados}}\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <ul class=\"list-unstyled mb-0\">\n                <li class=\"p-2 border-bottom\" *ngFor=\"let persona of usuariosConectados \">\n                  <a href=\"#!\" class=\"d-flex justify-content-between\">\n                    <div class=\"d-flex flex-row\">\n                     \n                      <img [src]=\"persona.urlImagen\" alt=\"Mi imagen\" class=\"rounded-circle d-flex align-self-center me-3 shadow-1-strong\" width=\"60\" >\n                      <!-- fin logica de imagenes segun el sexo-->\n                      <div class=\"pt-1\">\n                        <p class=\"fw-bold mb-0\">{{persona.nombre}}</p>  \n                      </div>\n                    </div>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <!-- fin area miembros conectados-->\n\n        <!-- ventana de chat -->\n        <div class=\"col-md-8 col-lg-9 col-xl-9 \" >\n          <div class=\"chat-box\" #chatWindow >\n            <ul class=\"list-unstyled \">\n            <li class=\"d-flex justify-content-between mb-4\" *ngFor=\"let message of arrayMessages \">\n               <img [src]=\"message.urlImagen\" alt=\"Mi imagen\" class=\"rounded-circle d-flex align-self-center me-3 shadow-1-strong\" width=\"60\" >\n              <div class=\"card\">\n                <div class=\"card-header d-flex justify-content-between p-3\">\n                  <p class=\"fw-bold mb-0\">{{message.user}}</p>\n                  <p class=\"text-muted small mb-0\"><i class=\"far fa-clock\">{{ message.timeElapsed }}</i></p>\n                </div>\n                <div class=\"card-body\">\n                  <p class=\"mb-0\">\n                    {{message.message}}\n                  </p>\n                </div>\n              </div>\n            </li>\n            <!--form group-->\n            \n          </ul>\n          </div>\n         <!-- codigo del imput para escribir el mensaje y boton de enviar--> \n          <ul class=\"list-unstyled  \" >\n            <li class=\"bg-white mb-3\">\n              <form [formGroup]=\"form\"> \n              <div class=\"form-outline\">\n                <textarea class=\"form-control\" (keydown.enter)=\"enviar()\" formControlName=\"message\" id=\"textAreaExample2\" rows=\"4\"></textarea>\n                <label class=\"form-label\" for=\"textAreaExample2\">Message</label>\n              </div>\n              </form>\n            </li>\n            <button type=\"button\" class=\"btn btn-info btn-rounded float-end\" (click)=\"enviar()\">Send</button>\n          </ul>\n          <!-- end codigo del imput para escribir el mensaje y boton de enviar--> \n        </div>\n  \n      </div>\n  \n    </div>\n  </section>\n \n\n  <!-- Modal profile -->\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Puedes cambiar tu imagen</h1>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <app-profile [nombre]=\"nombre\"></app-profile>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup,Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NetworkBySocketsIoService } from 'src/app/services/network-by-sockets-io.service';\n;\n\n@Component({\n  selector: 'app-entrar-sin-registro',\n  templateUrl: './entrar-sin-registro.component.html',\n  styleUrls: ['./entrar-sin-registro.component.css']\n})\nexport class EntrarSinRegistroComponent implements OnInit {\n  nombreUsuarioDisponible: boolean= true\n  form = new FormGroup({\n    nombre: new FormControl('',[Validators.required,]),\n    sexo: new FormControl('', Validators.required)\n  });\n  constructor(private router: Router,\n              private netwokBySockets:NetworkBySocketsIoService) {\n                \n               }\n\n  ngOnInit(): void {\n  }\n\n  submitForm(){\n    let urlImagen =''\n    if(this.form.get('sexo')?.value==='mujer'){\n        urlImagen= 'mujer.jpg'\n    }else{\n      urlImagen= 'hombre.jpg'\n    }\n    //pruebo entrar sin registro,para eso el nombre de usuario tiene que estar diponible\n    this.netwokBySockets.entrarSinRegistro({nombre:this.form.get('nombre')?.value,urlImagen})//mando nombre, mas imagen, y espero respuesta\n    this.netwokBySockets.\n        nombreUsuarioDisponibleSubject\n          .subscribe((disponible: boolean) => {\n              if(disponible){\n                localStorage.setItem('entrarSinRegistro','true')\n                this.router.navigate(['/chat'], { queryParams: { nombre: this.form.get('nombre')?.value, sexo: this.form.get('sexo')?.value } });\n              }\n              else{\n                this.nombreUsuarioDisponible = disponible;\n                console.log('usuario no disponible:',this.nombreUsuarioDisponible)\n              }\n            });\n  }\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n    <div>\n      <label for=\"nombre\" class=\"form-label\">Nombre:</label>\n      <input type=\"text\" id=\"nombre\" formControlName=\"nombre\" class=\"form-control\" aria-labelledby=\"passwordHelpBlock\">\n      <div *ngIf=\"!nombreUsuarioDisponible\"class=\"alert alert-danger\" role=\"alert\">\n        El nombre de usuario no está disponible. \n      </div>\n     \n    </div>\n    <div>\n      <label>Sexo:</label>\n      <div>\n        <label for=\"sexo-masculino\">\n          <input type=\"radio\" id=\"sexo-masculino\" name=\"sexo\" value=\"hombre\" formControlName=\"sexo\" required>\n          Masculino\n        </label>\n      </div>\n      <div>\n        <label for=\"sexo-femenino\">\n          <input type=\"radio\" id=\"sexo-femenino\" name=\"sexo\" value=\"mujer\" formControlName=\"sexo\" required>\n          Femenino\n        </label>\n      </div>\n      <!-- <div *ngIf=\"form.get('sexo').invalid && form.get('sexo').touched\">\n        <span *ngIf=\"form.get('sexo').errors?.required as error\">El sexo es requerido.</span>\n      </div> -->\n    </div>\n    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"form.invalid\">Enviar</button>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup,Validators } from '@angular/forms';\nimport { ProfileService } from 'src/app/services/profile.service';\n\ndeclare let alertify:any\n\n@Component({\n  selector: 'app-registrarse',\n  templateUrl: './registrarse.component.html',\n  styleUrls: ['./registrarse.component.css']\n})\nexport class RegistrarseComponent implements OnInit {\n  \n  serverInternalError=false\n  imgCargando = false \n  formRegister = new FormGroup({\n    nombre: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', Validators.required),\n    sexo: new FormControl('', Validators.required)\n  });\n\n  constructor(private profileService:ProfileService) { }\n\n  ngOnInit(): void {\n  }\n\n  get nombre() { return this.formRegister.get('nombre'); }\n  get email() { return this.formRegister.get('email'); }\n  get password() { return this.formRegister.get('password'); }\n  get sexo() { return this.formRegister.get('sexo'); }\n\n  registrarse() {\n    // Aquí  lógica para registrar al usuario\n    this.profileService.crearUsuario(this.formRegister.value)\n    .subscribe( (value) => {\n        this.formRegister.reset()\n        this.serverInternalError =false\n        console.log( value)\n        alertify.success('usuario creado exitosamente.'); \n      },error=>{\n        this.imgCargando = false\n        console.log(error)\n        if(error.error.msg==='el nombre ya esta en uso'){\n          alert(' el nombre ya esta en uso prueba con otro')\n        }\n        if(error.error.msg==='el mail ya esta en uso'){\n          alert(' el mail ya esta en uso prueba con otro')\n        } \n        if(error.status===500){\n          this.serverInternalError =true\n        }\n        console.log('hubo un error')\n      })  \n  }\n\n}\n","\n<!-- form grup-->\n<form [formGroup]=\"formRegister\">\n     <!-- input nombre -->\n    <div class=\"mb-3\">\n        <label for=\"exampleFormControlInput\" class=\"form-label\">Nombre</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"nombre\" id=\"exampleFormControlInput\" placeholder=\"Nombre\">\n        <div *ngIf=\"nombre?.invalid && (nombre?.dirty || nombre?.touched)\">\n          <div *ngIf=\"nombre?.errors?.required\" class=\"alert alert-danger\">\n              Nombre es requerido.\n          </div>\n        </div>\n    </div>\n    <!-- end input nombre -->\n    <!-- input email adress-->\n    <div class=\"mb-3\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\">Email address</label>\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\">\n      <div *ngIf=\"email?.invalid && (email?.dirty || email?.touched)\" >\n        <div *ngIf=\"email?.errors?.required\" class=\"alert alert-danger\">\n            email is required.\n        </div>\n        <div *ngIf=\"email?.errors?.email\" class=\"alert alert-danger\">\n            has to be a email.\n        </div>  \n      </div> \n    </div>\n    <!--end input email adress-->\n    <!-- input password-->\n    <div class=\"mb-3\">\n      <label for=\"exampleFormControlInput2\" class=\"form-label\">password</label>\n      <input type=\"password\" class=\"form-control\"  formControlName=\"password\" id=\"exampleFormControlInput2\" >\n      <div *ngIf=\"password?.invalid && (password?.dirty || password?.touched)\">\n        <div *ngIf=\"password?.errors?.required\" class=\"alert alert-danger\">\n            password es requerido.\n        </div>\n      </div>\n    </div>\n    <!--end input password-->\n    <!-- input sexo -->\n    <div class=\"mb-3\">\n        <label class=\"form-label\">Sexo</label>\n        <div class=\"form-check\">\n        <input class=\"form-check-input\" type=\"radio\" id=\"sexoHombre\" value=\"hombre\" formControlName=\"sexo\">\n        <label class=\"form-check-label\" for=\"sexoHombre\">\n            Hombre\n        </label>\n        </div>\n        <div class=\"form-check\">\n        <input class=\"form-check-input\" type=\"radio\" id=\"sexoMujer\" value=\"mujer\" formControlName=\"sexo\">\n        <label class=\"form-check-label\" for=\"sexoMujer\">\n            Mujer\n        </label>\n        </div>\n    </div>\n    <!-- end input sexo -->\n    <!-- button of login-->\n    <div class=\"login-botones\">\n      <button type=\"button\" class=\"btn btn-primary\" \n      [disabled]=\"!formRegister.valid\"   (click)=\"registrarse()\">registrase</button>\n    </div>\n    <!--end button of login-->\n  </form>\n  <!--end form grup-->\n  <!-- <img *ngIf=\"imgCargando\" src=\"./assets/cargando.gif\" /> -->\n  <!-- messages of validation-->\n  <div class=\"alert alert-danger\" *ngIf=\"serverInternalError\" role=\"alert\">\n    the server is not working right now, some problem are happening, try more later\n   </div>\n \n  <!-- end messages of validation-->\n  \n  ","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport io from 'socket.io-client';\nimport { Observable, Subject } from 'rxjs';\nimport { UsuariosConectados } from '../interfaces/usuariosConectados';\nimport { HandleTokensService } from './handle-tokens.service';\nimport { ProfileService } from './profile.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NetworkBySocketsIoService {\n\n   //crear coneccion socket con el servidor\n  socketBackend = io(environment.url_endpoint);\n\n  //declaro variables (que seran observables) en el servicio que puego desde componente me subscribire\n  public nombreUsuarioDisponibleSubject: Subject<boolean>;\n  public usuariosConectadosSubject: Subject<UsuariosConectados>;\n  public messageSubject: Subject<any>\n\n  constructor(\n    private router: Router,\n    private handleTokensService:HandleTokensService,\n    private profileService:ProfileService\n    ) { \n      //creo observables para usuarios conectados y mensajes\n      this.nombreUsuarioDisponibleSubject = new Subject<boolean>();\n      this.usuariosConectadosSubject = new Subject<UsuariosConectados>();\n      this.messageSubject = new Subject<string>()\n\n      //desde el cliente escucho el eveto coneccion web socket con el server\n      this.socketBackend.on('connect', () => { \n        console.log('Cliente conectado', this.socketBackend.id); \n        \n      //obtener los usuarios cada vez que entra o sale un usuario\n      this.socketBackend.on('usuariosConectados', (usuarios) => {\n          this.usuariosConectadosSubject.next(usuarios);\n        });\n      });\n\n      //obtener cada mensaje que se vaya publicando\n      this.socketBackend.on('messageDelServer', (message) => {\n        this.messageSubject.next(message)\n      });\n\n      //programacion a ejecutar cuando se corta la coneccion\n      this.socketBackend.on('disconnect', () => {\n        const salir= localStorage.getItem('salir');\n        if(salir==='true'){\n          localStorage.setItem('salir', 'false');\n          this.router.navigate(['/entrar-sin-registro'] )\n        }else{\n          // Cliente desconectado\n        alert('Se ha perdido la conexión');\n        this.router.navigate(['/entrar-sin-registro'] )\n        }\n        \n      });\n    }\n\n    iniciarConexion(): void {\n      this.socketBackend = io(environment.url_endpoint);\n    }\n\n    entrarSinRegistro(form:any){\n       //emitir peticion de entrada y manejar la respuesta de servidor al inicio sin registro\n       this.socketBackend.emit('iniciarSinRegistro',form, (disponibilidad: any) => {\n        if (disponibilidad) {\n          localStorage.setItem('salir', 'false');\n          this.nombreUsuarioDisponibleSubject.next(true);\n        } else {\n           this.nombreUsuarioDisponibleSubject.next(false);\n        }\n      });\n    }\n    \n  login(form:any){\n      //emitir peticion de entrada y manejar la respuesta de servidor al inicio sin registro\n      this.socketBackend.emit('login',form, (respuesta: any) => {\n       if (respuesta.acceso) {\n         //guardar datos y token en localStorage\n         this.handleTokensService.saveToken(respuesta.token)\n         this.profileService.saveProfile(respuesta.profile)\n         localStorage.setItem('salir', 'false');\n         setTimeout(()=>{this.router.navigate(['/chat'], \n         { queryParams: \n          { nombre: respuesta.profile.nombre, \n            sexo: respuesta.profile.sexo ,\n            urlImagen:respuesta.profile.urlImagen,\n            _id:respuesta.profile_id,\n            userRegister:true} \n          })},0)\n         ;\n       } else {\n          alert(respuesta.error)\n       }\n     });\n   }\n    obtenerUsuariosConectados(): Observable<UsuariosConectados>  {\n      // Emitir un evento al servidor para obtener la lista de usuarios conectados\n      this.socketBackend.emit('obtenerUsuariosConectados');\n  \n      // Devolver el observable para que el componente pueda suscribirse\n      return this.usuariosConectadosSubject.asObservable();\n    }\n    cerrarSesion(){\n      localStorage.setItem('salir', 'true');\n          this.socketBackend.disconnect();\n    }\n    enviarMessage(user:string,urlImagen:string,message:string){\n      this.socketBackend.emit('messageDelCliente',{urlImagen,user,message} )\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntrarChatGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      const entrarSinRegistro = localStorage.getItem('entrarSinRegistro')\n      const token= localStorage.getItem('Token')\n      if(entrarSinRegistro){\n        return true;\n      }\n      if(token){\n        return true;\n      }\n      alert(' Debes iniciar sesión primero.');\n      this.router.navigate(['/entrar-sin-registro'] )\n      return false\n        \n     \n    \n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { UserRegistrado } from '../interfaces/user-registrado';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private http: HttpClient) { }\n\n  crearUsuario(form:any){\n    return this.http.post(`${environment.url_endpoint}/users/`,form)\n  }\n  actualizarUsuario(form:any){\n    return this.http.put(`${environment.url_endpoint}/users/`,form)\n  }\n  saveProfile(userRegistrado:UserRegistrado){\n    localStorage.setItem('nombre',userRegistrado.nombre)\n    localStorage.setItem('sexo',userRegistrado.sexo)\n    localStorage.setItem('urlImagen',userRegistrado.urlImagen)\n  }\n  getProfile(){\n    const profile = {\n      name : localStorage.getItem('ProfileName'),\n      email : localStorage.getItem('ProfileEmail')\n    }\n    return profile\n  }\n  removeProfile(){\n    localStorage.removeItem('ProfileName')\n    localStorage.removeItem('ProfileEmail')\n  }  \n  logout(){\n    this.removeProfile()\n    // this.router.navigate(['/login'])\n    // this.handleTokensService.removeToken()\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n // url_endpoint : \"http://localhost:3000\"\n  url_endpoint : \"https://chat-io-dswk.onrender.com\"\n};\n\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio-sesion',\n  templateUrl: './inicio-sesion.component.html',\n  styleUrls: ['./inicio-sesion.component.css']\n})\nexport class InicioSesionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>inicio-sesion works!</p>\n<!-- Button trigger modal -->\n<button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n    chatear\n  </button>\n  \n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">iniciar sesion</h1>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <router-outlet></router-outlet>\n        </div>\n        <div class=\"modal-footer\">\n          <a routerLink=\"login\" routerLinkActive=\"active\" class=\"btn btn-outline-primary\" >login</a>\n          <a routerLink=\"entrar-sin-registro\" routerLinkActive=\"active\" class=\"btn btn-outline-secondary\" >Entrar sin Registro</a>\n          <a routerLink=\"registrarse\" routerLinkActive=\"active\" class=\"btn btn-outline-info\">Registrarse</a>\n        </div>\n      </div>\n    </div>\n  </div>","\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HandleTokensService {\n\n  constructor() { }\n\n  saveToken(token:string){\n    localStorage.setItem('Token',token)\n  }\n  getToken(){\n    return localStorage.getItem('Token')\n  }\n  removeToken(){\n    localStorage.removeItem('Token')\n  }  \n  \n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cliente';\n}\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl, FormGroup ,Validators } from '@angular/forms';\nimport { ImageService } from '../services/image.service';\nimport { ProfileService } from '../services/profile.service';\n\ndeclare let alertify:any\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  emailAvailable = false\n  emailNotAvailable = false\n  successRegisted = false\n  serverInternalError=false\n  showAvailableEmailMessage= false\n  form:any\n  file:any\n  previewImage: string | undefined;\n  errorMessage: string | undefined;\n  @Input() nombre: string = ''\n  isDisabled= true\n  constructor(private serviceProfile:ProfileService,\n              private imageService:ImageService) { }\n  \n  ngOnInit(): void {\n    this.form = new FormGroup({\n    nombre: new FormControl({value:this.nombre, disabled:true})\n    \n    });\n  }\n  \n  \n  \n \n  get image() { return this.form.get('image'); }\n\n   \n  onFileSelected(evento:Event){\n    //capturo la imagen para pasarla a la propiedad file que se cargara al formData\n    const element = evento.target as HTMLInputElement\n    const file = element.files?.item(0)\n    if(file){\n    \n      this.file= file\n    }\n    \n    if (file) {\n       // La imagen tiene un tamaño menor o igual a 4 MB\n      if (file.size <= 4 * 1024 * 1024) {\n       \n        // Crea un objeto URL para representar la imagen seleccionada\n        const reader = new FileReader();\n        reader.onload = (e: any) => {\n          this.previewImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n        this.errorMessage = undefined; // Limpiar mensaje de error si se carga una imagen válida\n      } else {\n        this.errorMessage = \"La imagen debe tener un tamaño menor o igual a 4 MB.\";\n        this.previewImage = undefined; // Limpiar vista previa de la imagen si se excede el límite de tamaño\n      }  \n    }\n  }\n\n  guardarCambios(){\n    const formData = new FormData();\n    formData.append('nombre', this.nombre);\n    formData.append('image', this.file);\n    \n    this.serviceProfile.actualizarUsuario(formData)\n    .subscribe((data:any) => {\n      //actualizo el nombre de la imagen en el localstorage, con esto los mensajes ahora msotraran la nueva foto en cada mensaje\n      //el codigo esta correcto, en caso de que se siga viendo la imagen anterior es por el cache del navegador\n      localStorage.setItem('urlImagen',data.nuevaImagen)\n      this.previewImage = undefined; // Limpiar la vista previa de la imagen\n      // Actualizar la imagen en el servicio compartido\n      this.imageService.updateImage(data.nombre,data.nuevaImagen);\n      alertify.success('Success notification message.'); \n    },error=>{\n      console.log(error)\n      console.log(error.error.msg)\n      console.log('ok:' + error.error.ok)\n    })\n  }\n}\n","\n<!--form group-->\n<form [formGroup]=\"form\">\n    <!-- input name-->\n    <div class=\"mb-3\">\n        <label for=\"exampleFormControlInput1\" class=\"form-label\">name</label>\n         <input type=\"text\" class=\"form-control\"  formControlName=\"nombre\" id=\"exampleFormControlInput1\" >\n         \n    </div>\n    <!--end input name-->\n    \n\n    <!-- input img-->\n    <div class=\"mb-3\">\n        <label for=\"exampleFormControlInput4\" class=\"form-label\">imagen</label>\n        <input type=\"file\" class=\"form-control\" (change)=\"onFileSelected($event)\" id=\"exampleFormControlInput4\" >\n    </div>\n    <!-- end input img-->\n    <!-- previsualizacion de la imagen -->\n    <div *ngIf=\"previewImage\" class=\"preview-container\">\n        <img [src]=\"previewImage\" alt=\"Vista previa de la imagen\" class=\"preview-image\">\n      </div>\n    <!-- fin previsualziacion de la imagen-->\n    <!-- previsualizacion de la imagen -->\n    <!-- mensaje excedio el limite de size de la imagen -->\n    <div *ngIf=\"errorMessage\" class=\"error-message\">\n        {{ errorMessage }}\n    </div>\n    <!-- fin mensaje excedio el limite de size de la imagen -->\n\n    <!-- button to regist-->\n    <div class=\"login-botones\">\n\t    <button  type=\"button\"  class=\"btn btn-primary\" (click)=\"guardarCambios()\">guardarCambios</button>\n    </div>\n    \n</form>\n<!-- end form group-->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './inicio-sesion/login/login.component';\nimport { InicioSesionComponent } from './inicio-sesion/inicio-sesion.component';\nimport { EntrarSinRegistroComponent } from './inicio-sesion/entrar-sin-registro/entrar-sin-registro.component';\nimport { RegistrarseComponent } from './inicio-sesion/registrarse/registrarse.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    ProfileComponent,\n    LoginComponent,\n    InicioSesionComponent,\n    EntrarSinRegistroComponent,\n    RegistrarseComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup,Validators } from '@angular/forms';\nimport { NetworkBySocketsIoService } from 'src/app/services/network-by-sockets-io.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  LoggedBadly= false\n  serverInternalError=false\n  imgCargando = false \n  form = new FormGroup({\n    email: new FormControl('',[Validators.required, Validators.email]),\n    password: new FormControl('', Validators.required)\n  });\n  constructor(\n    private netwokBySockets:NetworkBySocketsIoService) { }\n\n  ngOnInit(): void {\n    localStorage.clear();\n  }\n  \n  get email() { return this.form.get('email'); }\n  get password() { return this.form.get('password'); }\n\n  login(){\n    this.netwokBySockets.login(this.form.value)\n    \n  }\n \n}\n\n","  <!-- form grup-->\n  <form [formGroup]=\"form\">\n    <!-- input email adress-->\n    <div class=\"mb-3\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\">Email address</label>\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\">\n      <div *ngIf=\"email?.invalid && (email?.dirty || email?.touched)\" >\n        <div *ngIf=\"email?.errors?.required\" class=\"alert alert-danger\">\n            email is required.\n        </div>\n        <div *ngIf=\"email?.errors?.email\" class=\"alert alert-danger\">\n            has to be a email.\n        </div>  \n      </div> \n    </div>\n    <!--end input email adress-->\n    <!-- input password-->\n    <div class=\"mb-3\">\n      <label for=\"exampleFormControlInput2\" class=\"form-label\">password</label>\n      <input type=\"password\" class=\"form-control\"  formControlName=\"password\" id=\"exampleFormControlInput2\" >\n    </div>\n    <!--end input password-->\n    <!-- button of login-->\n    <div class=\"login-botones\">\n      <button type=\"button\" class=\"btn btn-primary\" \n      [disabled]=\"!form.valid\"   (click)=\"login()\">loguin</button>\n    </div>\n    <!--end button of login-->\n  </form>\n  <!--end form grup-->\n  <!-- <img *ngIf=\"imgCargando\" src=\"./assets/cargando.gif\" /> -->\n  <!-- messages of validation-->\n  <div class=\"alert alert-danger\" *ngIf=\"LoggedBadly\" role=\"alert\">\n   incorrect log in, your password or email is wrong,\n   try again\n  </div>\n  <div class=\"alert alert-danger\" *ngIf=\"serverInternalError\" role=\"alert\">\n    the server is not working right now, some problem are happening, try more later\n   </div>\n \n  <!-- end messages of validation-->\n  \n  <!-- boton de invitado sin registro -->\n  <!-- <button type=\"button\" class=\"btn btn-success btn-lg sin-registro\" (click)=\"entrarSinRegistro()\">entrar sin registro</button> -->","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  private imageSource = new Subject<{ nombre: string, imageUrl: string }>(); // Inicialmente no hay imagen\n  public image$ = this.imageSource.asObservable();\n\n  public updateImage(nombre:string,imageUrl: string) {\n    let data={\n     nombre,\n     imageUrl\n    }\n    this.imageSource.next(data);\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatComponent } from './chat/chat.component';\nimport { EntrarChatGuard } from './guardianes/entrar-chat.guard';\nimport { EntrarSinRegistroComponent } from './inicio-sesion/entrar-sin-registro/entrar-sin-registro.component';\nimport { InicioSesionComponent } from './inicio-sesion/inicio-sesion.component';\nimport { LoginComponent } from './inicio-sesion/login/login.component';\nimport { RegistrarseComponent } from './inicio-sesion/registrarse/registrarse.component';\n\n\n\n\nconst routes: Routes = [\n  {path:'',component:InicioSesionComponent,\n   children: [\n      { path: '', component: LoginComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'entrar-sin-registro', component: EntrarSinRegistroComponent },\n      { path: 'registrarse', component: RegistrarseComponent }\n      // Aquí puedes agregar más rutas hijas si es necesario\n    ]\n  },\n  {path:'chat',component:ChatComponent,\n   canActivate: [EntrarChatGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}